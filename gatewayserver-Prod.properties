management.endpoints.web.exposure.include=info
# Whether the Eureka client is enabled (default: true)
eureka.client.enabled=true  
# Whether to register this application with Eureka (default: true)
eureka.client.register-with-eureka=true  
# Whether this client should fetch the registry information from Eureka server (default: true)
eureka.client.fetch-registry=true    



# Eureka client configuration
eureka.client.service-url.defaultZone=http://eurekaserver:8070/eureka/
eureka.instance.hostname=eurekaserver


#application prefers to use its IP address instead
# of its hostname when registering with the Eureka server
# and when other applications attempt to communicate with it.
eureka.instance.preferIpAddress=true

# app info configuration which will see it in the eureka dashboard
info.app.name=gatewayserver
info.app.description=Description of Your Application
info.app.version=1.0.0


# it allows you to shut down the application gracefully by
# sending an HTTP POST request to /shutdown.
# This endpoint is typically used for administrative purposes
# to safely terminate the application.
endpoint.shutdown.enable=true

# tell the gateway to go to the eurka server and get the all info service registration  details
spring.cloud.gateway.discovery.locator.enabled=true


# Eureka will expect that at least 85% of registered instances of a service should be sending heartbeats
# regularly (according to the configured heartbeat interval) to consider the service healthy or the preservation mode will activate
eureka.renewalPercentThreshold=0.85


#it ensures that the /shutdown endpoint is exposed through the Actuator framework.
management.endpoint.shutdown.enable=true
